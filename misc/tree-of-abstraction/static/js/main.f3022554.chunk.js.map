{"version":3,"sources":["services/shortcuts.service.ts","utils/utils.ts","utils/EventWrapper.tsx","utils/memory.ts","services/collection.service.ts","services/tree.service.ts","services/note.service.ts","services/main.service.ts","services/persistence.io.ts","bridge.ts","components/CollectionContainer.tsx","components/Loader.tsx","components/TreeContainer.tsx","App.tsx","index.tsx"],"names":["Shortcut","useSharedState","subject","useState","getValue","value","setState","useEffect","sub","subscribe","s","unsubscribe","state","next","getRandomNumbers","length","Array","from","Math","round","random","pow","toString","reverse","fill","map","v","i","join","Utils","amount","a","b","compose","arr","event","reduce","acc","shortcut","cb","result","Id","Keyboard","EventSubject","Subject","EventWrapper","props","children","id","childrenWithProps","React","Children","child","isValidElement","cloneElement","onClick","e","preventDefault","ctrlKey","shiftKey","onChange","target","onFocus","randomNumber","hotkeys","filter","Object","values","handler","key","UpdateNumber","keys","forEach","console","warn","shortcutAddCollection","collectionId","Collection","collectionNodes","isEditable","title","isHighlighted","getCollectionList","shortcutUpCollection","list","highlightedItemIndex","findIndex","highlightedItem","newHighlightedItemIndex","item","index","shortcutDownCollection","shortcutEnterCollection","selectedCollection","shortcutEditCollection","isEnter","Enter","getDescendants","node","treeNodes","getParents","parent","updateHighligted","updateTreeNodes","itemSearchInput","toLowerCase","includes","shortcutAddItem","selectedId","selectedNode","RootId","newNode","Item","isCollapsed","notes","indent","newParent","shortcutRemoveItem","nodeId","parentId","indexOf","newTreeNodes","isFound","max","clickItem","potentialDescendant","potentialParent","descendants","getIsDescendant","isDescendant","shortcutCollapse","shortcutToggleEditItem","shortcutEnter","shortcutDown","nodes","tree","maxIndex","newIndex","shortcutMoveDown","newChildren","slice","shortcutUp","shortcutMoveUp","shortcutUndo","UndoStack","RedoStack","push","prev","pop","shortcutRedo","shortcutAddNote","noteId","Note","newNoteNode","description","parents","selectedNote","noteNodes","shortcutDownNote","shortcutUpNote","shortcutCollapseNote","note","newNoteNodes","shortcutRemoveNote","newNotes","without","editNote","updateNoteNodes","incrementScore","score","decrementScore","processNotes","intersectionResult","intersection","isMatch","noteSearchInput","isMemoryDue","notFiltered","isSelected","isMemory","actTree","_state","type","toggleScopeResult","ToggleScope","scope","Scope","toggleScope","toggleIsMemoryResult","ToggleMemory","toggleIsMemory","changeItemTitleResult","changeItemTitle","clickItemResult","changeSearchInputResult","SearchItemsInput","changeSearchInput","undoableTreeResult","Add","Remove","MoveDown","MoveUp","nonUndoableTreeResult","Undo","Redo","Up","Down","Collapse","Edit","treeResult","currentTree","highlighted","highlightedParents","selectedParents","collapsedDescendants","toExclude","union","processTree","changeNotesSearchInputResult","SearchNotesInput","changeNotesSearchInput","changeNoteTitleResult","NoteTitle","replace","changeNoteTitle","changeNoteDescriptionResult","NoteDescription","changeNoteDescription","_id","clickItemFromNote","IncrementScore","DecrementScore","actCollection","changeCollectionTitleResult","itemIndex","changeCollectionTitle","SearchCollectionsInput","collectionSearchInput","changeCollectionSearchInput","collections","processCollection","act","State","route","ERoute","loadedState","JSON","parse","initialLoadingState","isLoading","collection","Tree","initialState","Route","hasRouteChanged","newState","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","dbRef","database","ref","getCollections","get","then","snapshot","exists","log","val","catch","error","normalizeState","entries","window","addEventListener","Save","StateSubject","set","writeCollection","cookies","document","cookie","split","email","find","password","auth","signInWithEmailAndPassword","userCredential","info","stringify","errorCode","code","errorMessage","message","RootNode","initialCollectionState","undefined","BehaviorSubject","prevState","CollectionContainer","style","display","flexDirection","height","overflow","background","className","autoFocus","placeholder","entity","marginLeft","backgroundColor","Loader","alignItems","justifyContent","width","position","color","TreeContainer","querySelector","scrollIntoView","border","opacity","borderRight","top","padding","dangerouslySetInnerHTML","__html","sanitize","rows","cols","RouteHelper","history","useHistory","pathname","location","useParams","dispatchEvent","CustomEvent","Load","App","exact","path","rootElement","getElementById","render"],"mappings":"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","file":"static/js/main.f3022554.chunk.js","sourcesContent":["import hotkeys from \"hotkeys-js\";\r\nimport { Id } from \"../bridge\";\r\nimport { EventSubject } from \"../utils/EventWrapper\";\r\nimport { randomNumber } from \"../utils/memory\";\r\n\r\nexport enum Shortcut {\r\n  ToggleMemory = \"alt+shift+m\",\r\n  Add = \"ctrl+shift+a\",\r\n  MoveDown = \"ctrl+down\",\r\n  MoveUp = \"ctrl+up\",\r\n  Up = \"up\",\r\n  Down = \"down\",\r\n  Edit = \"ctrl+shift+e\",\r\n  Redo = \"ctrl+shift+z\",\r\n  Undo = \"ctrl+z\",\r\n  Collapse = \"ctrl+shift+c\",\r\n  Enter = \"enter\",\r\n  Remove = \"delete\",\r\n  Save = \"ctrl+s\",\r\n  // Memory\r\n  ToggleScope = \"alt+shift+t\",\r\n  IncrementScore = \"alt+shift+1\",\r\n  DecrementScore = \"alt+shift+2\",\r\n  UpdateNumber = \"alt+shift+3\",\r\n}\r\n\r\ntry {\r\n  hotkeys.filter = () => true;\r\n  hotkeys(Object.values(Shortcut).join(\",\"), (e, handler) => {\r\n    e.preventDefault();\r\n    if (handler.key === Shortcut.UpdateNumber) {\r\n      Object.keys(randomNumber).forEach((id) => {\r\n        delete randomNumber[id];\r\n      });\r\n      console.warn(randomNumber);\r\n    }\r\n    EventSubject.next([\"keydown\", Id.Keyboard, handler.key]);\r\n  });\r\n} catch (e) {\r\n  console.warn(\"Couldn't initialize keyboard listener\");\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { IAct, Id, initialState, IState as IState } from \"../bridge\";\r\nimport { act } from \"../services/main.service\";\r\nimport { Shortcut } from \"../services/shortcuts.service\";\r\nimport { IEvent } from \"./EventWrapper\";\r\n\r\nexport const useSharedState = <T>(\r\n  subject: BehaviorSubject<T>\r\n): [T, (state: T) => void] => {\r\n  const [value, setState] = useState<T>(subject.getValue());\r\n  useEffect(() => {\r\n    const sub = subject.subscribe((s) => setState(s));\r\n    return () => sub.unsubscribe();\r\n  }, [subject]);\r\n  const newSetState = (state: T) => subject.next(state);\r\n  return [value, newSetState];\r\n};\r\n\r\nexport const setPartial = <T>(\r\n  subject: BehaviorSubject<T>,\r\n  partial: Partial<T>\r\n) => {\r\n  const prev = subject.getValue();\r\n  subject.next({ ...prev, ...partial });\r\n};\r\n\r\nconst getRandomNumbers = (length: number) => {\r\n  const value = Array.from(\r\n    Math.round(Math.random() * Math.pow(10, length)).toString()\r\n  ).reverse();\r\n  return new Array(length)\r\n    .fill(\"0\")\r\n    .map((v, i) => value[i] || v)\r\n    .reverse()\r\n    .join(\"\");\r\n};\r\n\r\nconst generateId = (amount: number = 4, length: number = 4) =>\r\n  new Array(amount)\r\n    .fill(0)\r\n    .map((a, i, b) => `${i && \"-\"}${getRandomNumbers(length)}`)\r\n    .join(\"\");\r\n\r\nexport const Utils = {\r\n  generateId,\r\n};\r\n\r\nexport const compose = <T>(\r\n  arr: Array<[Shortcut, (state: T, event: IEvent) => T | false]>\r\n) => (state: T, event: IEvent): T | false =>\r\n  arr.reduce((acc, [shortcut, cb]) => {\r\n    const result =\r\n      event[0] === \"keydown\" &&\r\n      event[1] === Id.Keyboard &&\r\n      event[2] === shortcut &&\r\n      cb(state, event);\r\n    return acc || result;\r\n  }, false as T | false);\r\n\r\nexport const genericSequence = <T>(act: IAct<T>, initialState: T) => (\r\n  inputs: IEvent[]\r\n): T => {\r\n  return inputs.reduce((acc, input) => act(acc)(input), initialState);\r\n};\r\n","import React from \"react\";\r\nimport { Subject } from \"rxjs\";\r\n\r\nexport type EventType =\r\n  | \"click\"\r\n  | \"change\"\r\n  | \"focus\"\r\n  | \"keydown\"\r\n  | \"keyup\"\r\n  | \"io\";\r\nexport type Id = string;\r\nexport type IEvent = [EventType, Id, string];\r\n\r\nexport const EventSubject = new Subject<IEvent>();\r\n\r\nexport const EventWrapper: React.FC<{ id: string }> = (props) => {\r\n  const { children, id } = props;\r\n  const childrenWithProps = React.Children.map<\r\n    React.ReactNode,\r\n    React.ReactNode\r\n  >(children, (child) => {\r\n    if (React.isValidElement(child)) {\r\n      return React.cloneElement(child, {\r\n        id,\r\n        onClick: (e: React.MouseEvent) => {\r\n          e.preventDefault();\r\n          EventSubject.next([\"click\", id, `${+e.ctrlKey}${+e.shiftKey}`]);\r\n        },\r\n        onChange: (e: React.ChangeEvent<HTMLInputElement>) => {\r\n          e.preventDefault();\r\n          EventSubject.next([\"change\", id, e?.target?.value]);\r\n        },\r\n        onFocus: (e: React.FocusEvent) => {\r\n          e.preventDefault();\r\n          EventSubject.next([\"focus\", id, \"\"]);\r\n        },\r\n      });\r\n    }\r\n    return child;\r\n  });\r\n  return <>{childrenWithProps}</>;\r\n};\r\n","export const scoreFunction = (score: number) => 1 / ((score || 1) ** 0.9 + 1);\r\n\r\nexport const randomNumber: { [key: string]: number } = {};\r\n","import { IAppState, Id } from \"../bridge\";\r\nimport { IEvent } from \"../utils/EventWrapper\";\r\nimport { Utils } from \"../utils/utils\";\r\nimport { Shortcut } from \"./shortcuts.service\";\r\n\r\nexport const shortcutAddCollection = (\r\n  state: IAppState[\"collection\"],\r\n  event: IEvent\r\n): IAppState[\"collection\"] => {\r\n  const collectionId = `${Id.Collection}-${Utils.generateId()}`;\r\n  return {\r\n    ...state,\r\n    collectionNodes: {\r\n      ...state.collectionNodes,\r\n      [collectionId]: {\r\n        id: collectionId,\r\n        isEditable: false,\r\n        title: \"Collection\",\r\n        isHighlighted: false,\r\n      },\r\n    },\r\n  };\r\n};\r\n\r\nconst getCollectionList = (state: IAppState[\"collection\"]) =>\r\n  Object.values(state.collectionNodes);\r\n\r\nexport const shortcutUpCollection = (\r\n  state: IAppState[\"collection\"],\r\n  event: IEvent\r\n): IAppState[\"collection\"] => {\r\n  const list = getCollectionList(state);\r\n  const highlightedItemIndex = list.findIndex(\r\n    (highlightedItem) => highlightedItem.isHighlighted\r\n  );\r\n  const newHighlightedItemIndex =\r\n    (list.length + highlightedItemIndex - 1) % list.length;\r\n  const collectionNodes = list\r\n    .map((item, index) => ({\r\n      ...item,\r\n      isHighlighted: index === newHighlightedItemIndex,\r\n    }))\r\n    .reduce((acc, item) => ({ ...acc, [item.id]: item }), {});\r\n  return {\r\n    ...state,\r\n    collectionNodes,\r\n  };\r\n};\r\n\r\nexport const shortcutDownCollection = (\r\n  state: IAppState[\"collection\"],\r\n  event: IEvent\r\n): IAppState[\"collection\"] => {\r\n  const list = getCollectionList(state);\r\n  const highlightedItemIndex = list.findIndex(\r\n    (highlightedItem) => highlightedItem.isHighlighted\r\n  );\r\n  const newHighlightedItemIndex =\r\n    (list.length + highlightedItemIndex + 1) % list.length;\r\n  const collectionNodes = list\r\n    .map((item, index) => ({\r\n      ...item,\r\n      isHighlighted: index === newHighlightedItemIndex,\r\n    }))\r\n    .reduce((acc, item) => ({ ...acc, [item.id]: item }), {});\r\n  return {\r\n    ...state,\r\n    collectionNodes,\r\n  };\r\n};\r\n\r\nexport const shortcutEnterCollection = (\r\n  state: IAppState[\"collection\"],\r\n  event: IEvent\r\n): IAppState[\"collection\"] => {\r\n  const list = getCollectionList(state);\r\n  const highlightedItemIndex = list.findIndex(\r\n    (highlightedItem) => highlightedItem.isHighlighted\r\n  );\r\n  return {\r\n    ...state,\r\n    selectedCollection: list[highlightedItemIndex].id,\r\n  };\r\n};\r\n\r\nexport const shortcutEditCollection = (\r\n  state: IAppState[\"collection\"],\r\n  event: IEvent\r\n): IAppState[\"collection\"] | false => {\r\n  const [type, id, value] = event;\r\n  const isEnter = value === Shortcut.Enter;\r\n\r\n  const list = getCollectionList(state);\r\n  const highlightedItemIndex = list.findIndex(\r\n    (highlightedItem) => highlightedItem.isHighlighted\r\n  );\r\n\r\n  const isEditable = list[highlightedItemIndex].isEditable;\r\n\r\n  if (isEnter && !isEditable) return false;\r\n\r\n  const collectionNodes = list\r\n    .map((item, index) => ({\r\n      ...item,\r\n      isEditable: index === highlightedItemIndex ? !item.isEditable : false,\r\n    }))\r\n    .reduce((acc, item) => ({ ...acc, [item.id]: item }), {});\r\n  return {\r\n    ...state,\r\n    collectionNodes,\r\n  };\r\n};\r\n\r\n// export const shortcutRemoveCollection = (\r\n//   state: IAppState[\"collection\"],\r\n//   event: IEvent\r\n// ): IAppState[\"collection\"] => {\r\n//   const list = getCollectionList(state);\r\n//   const highlightedItemIndex = list.findIndex(\r\n//     (highlightedItem) => highlightedItem.isHighlighted\r\n//   );\r\n//   const collectionNodes = list\r\n//     .filter((item, index) => index !== highlightedItemIndex)\r\n//     .reduce((acc, item) => ({ ...acc, [item.id]: item }), {});\r\n//   return {\r\n//     ...state,\r\n//     collectionNodes,\r\n//   };\r\n// };\r\n\r\nexport const changeCollectionTitle = (\r\n  state: IAppState[\"collection\"],\r\n  event: IEvent\r\n): IAppState[\"collection\"] => {\r\n  const [, id, value] = event;\r\n  const list = getCollectionList(state);\r\n  const itemIndex = list.findIndex((item) => item.id === id);\r\n  const collectionNodes = list\r\n    .map((item, index) => ({\r\n      ...item,\r\n      title: index === itemIndex ? value : item.title,\r\n    }))\r\n    .reduce((acc, item) => ({ ...acc, [item.id]: item }), {});\r\n  return {\r\n    ...state,\r\n    collectionNodes,\r\n  };\r\n};\r\n\r\nexport const changeCollectionSearchInput = (\r\n  state: IAppState[\"collection\"],\r\n  [, , value]: IEvent\r\n): IAppState[\"collection\"] => {\r\n  return {\r\n    ...state,\r\n    collectionSearchInput: value,\r\n  };\r\n};\r\n\r\nexport const processCollection = (\r\n  state: IAppState[\"collection\"]\r\n): IAppState[\"collection\"] => ({\r\n  ...state,\r\n  collections: Object.values(state.collectionNodes)\r\n    .filter(\r\n      (node) =>\r\n        (state.collectionSearchInput || \"\").length < 3 ||\r\n        (state.collectionSearchInput &&\r\n          node.title\r\n            .toLowerCase()\r\n            .includes(state.collectionSearchInput.toLowerCase()))\r\n    )\r\n    .map((node) => node.id),\r\n});\r\n","import { intersection, union, without } from \"lodash\";\r\nimport { Id, INode, IState, RootId } from \"../bridge\";\r\nimport { IEvent } from \"../utils/EventWrapper\";\r\nimport { Utils } from \"../utils/utils\";\r\nimport { RedoStack, UndoStack } from \"./main.service\";\r\n\r\nexport const getDescendants = (id: string, state: IState): string[] => {\r\n  const node = state.treeNodes[id];\r\n  if (!node) return [];\r\n  return node.children.reduce((acc, id) => {\r\n    return [...acc, id, ...getDescendants(id, state)] as string[];\r\n  }, [] as string[]);\r\n};\r\n\r\nexport const getIsDescendant = (\r\n  potentialDescendant: string,\r\n  potentialParent: string,\r\n  state: IState\r\n): [boolean, string[]] => {\r\n  const descendants = getDescendants(potentialParent, state);\r\n  return [descendants.includes(potentialDescendant), descendants];\r\n};\r\n\r\nexport const getParents = (id: string, state: IState): string[] => {\r\n  const node = state.treeNodes[id];\r\n  if (!node) return [];\r\n  return [...getParents(node.parent, state), id];\r\n};\r\n\r\nexport const updateHighligted = (state: IState) => {\r\n  const newTreeNodes = updateTreeNodes(state, (node) => {\r\n    const value = state.itemSearchInput;\r\n    const isHighlighted =\r\n      !!value &&\r\n      value.length >= 3 &&\r\n      node.title.toLowerCase().includes(value.toLowerCase());\r\n    return {\r\n      ...node,\r\n      isHighlighted,\r\n    };\r\n  });\r\n  return newTreeNodes;\r\n};\r\n\r\nexport const updateTreeNodes = (state: IState, cb: (node: INode) => INode) =>\r\n  Object.values(state.treeNodes)\r\n    .map(cb)\r\n    .reduce(\r\n      (acc, node) => ({ ...acc, [node.id]: node }),\r\n      {} as typeof state.treeNodes\r\n    );\r\n\r\nexport const shortcutAddItem = (state: IState, event: IEvent): IState => {\r\n  const selectedId = state.selectedNode || RootId;\r\n  const newNode: INode = {\r\n    children: [] as string[],\r\n    id: `${Id.Item}-${Utils.generateId()}`,\r\n    isCollapsed: false,\r\n    notes: [],\r\n    parent: selectedId,\r\n    title: \"title\",\r\n    isHighlighted: false,\r\n    isEditable: false,\r\n    indent: state.treeNodes[selectedId].indent + 1,\r\n  };\r\n  const parent = state.treeNodes[selectedId];\r\n  const newParent = {\r\n    [parent.id]: {\r\n      ...parent,\r\n      children: [...parent.children, newNode.id],\r\n    },\r\n  };\r\n  const treeNodes = {\r\n    ...state.treeNodes,\r\n    ...newParent,\r\n    ...{ [newNode.id]: newNode },\r\n  };\r\n  return {\r\n    ...state,\r\n    treeNodes,\r\n  };\r\n};\r\n\r\nexport const shortcutRemoveItem = (state: IState, [, id]: IEvent): IState => {\r\n  const nodeId = state.selectedNode;\r\n  const parentId = state.treeNodes[nodeId]?.parent;\r\n  const parent = state.treeNodes[parentId];\r\n  if (!parent) return state;\r\n  const index = state.treeNodes[parentId].children.indexOf(nodeId);\r\n  const newTreeNodes = updateTreeNodes(state, (node) => {\r\n    const isFound = node.id === nodeId && node.id !== RootId;\r\n    const isParent = node.id === parentId;\r\n    if (isParent)\r\n      return {\r\n        ...node,\r\n        children: node.children.filter((id) => id !== nodeId),\r\n      };\r\n    if (isFound)\r\n      return {\r\n        ...node,\r\n        parent: \"\",\r\n      };\r\n    return node;\r\n  });\r\n  return {\r\n    ...state,\r\n    selectedNode:\r\n      newTreeNodes[parentId].children[Math.max(0, index - 1)] || parentId,\r\n    treeNodes: newTreeNodes,\r\n  };\r\n};\r\n\r\nexport const clickItem = (state: IState, [, id, value]: IEvent): IState => {\r\n  if (value === \"10\") {\r\n    const [isDescendant, descendants] = getIsDescendant(\r\n      id,\r\n      state.selectedNode,\r\n      state\r\n    );\r\n    const isDescendantOrSelf = isDescendant || id === state.selectedNode;\r\n    if (isDescendantOrSelf) return state;\r\n    const newTreeNodes = updateTreeNodes(state, (node) => {\r\n      const parentId = state.treeNodes[state.selectedNode].parent;\r\n      // Update indent of descendants\r\n      if (descendants.includes(node.id)) {\r\n        return {\r\n          ...node,\r\n          indent:\r\n            state.treeNodes[id].indent +\r\n            (node.indent - state.treeNodes[state.selectedNode].indent) +\r\n            1,\r\n        };\r\n      }\r\n      // Update target node\r\n      if (node.id === id) {\r\n        return {\r\n          ...node,\r\n          children: [\r\n            state.selectedNode,\r\n            ...node.children.filter((id) => id !== state.selectedNode),\r\n          ],\r\n        };\r\n      }\r\n      // Update selected node's parent\r\n      if (node.id === parentId) {\r\n        return {\r\n          ...node,\r\n          children: node.children.filter((id) => id !== state.selectedNode),\r\n        };\r\n      }\r\n      // Update selected node parent property\r\n      if (node.id === state.selectedNode) {\r\n        return {\r\n          ...node,\r\n          parent: id,\r\n          indent: state.treeNodes[id].indent + 1,\r\n        };\r\n      }\r\n      return node;\r\n    });\r\n    return {\r\n      ...state,\r\n      treeNodes: newTreeNodes,\r\n      selectedNode: id,\r\n    };\r\n  }\r\n  return {\r\n    ...state,\r\n    selectedNode: id,\r\n  };\r\n};\r\n\r\nexport const changeSearchInput = (\r\n  state: IState,\r\n  [, , value]: IEvent\r\n): IState => {\r\n  return {\r\n    ...state,\r\n    itemSearchInput: value,\r\n  };\r\n};\r\n\r\nexport const toggleIsMemory = (state: IState): IState => ({\r\n  ...state,\r\n  isMemory: !state.isMemory,\r\n});\r\n\r\nexport const process = (state: IState): IState => {\r\n  const currentTree = [RootId, ...getDescendants(RootId, state)];\r\n  const highlighted = Object.values(state.treeNodes)\r\n    .filter(({ isHighlighted }) => isHighlighted)\r\n    .map(({ id }) => id);\r\n  const highlightedParents = highlighted.reduce(\r\n    (acc, id) => {\r\n      return [...acc, ...getParents(id, state)];\r\n    },\r\n    [...highlighted] as string[]\r\n  );\r\n  const selectedParents = getParents(state.selectedNode, state);\r\n  const collapsed = Object.values(state.treeNodes)\r\n    .filter(({ isCollapsed }) => isCollapsed)\r\n    .map(({ id }) => id);\r\n  const collapsedDescendants = collapsed.reduce((acc, id) => {\r\n    return [...acc, ...getDescendants(id, state)];\r\n  }, [] as string[]);\r\n  if (!state.itemSearchInput || state.itemSearchInput.length < 3) {\r\n    const toExclude = without(\r\n      collapsedDescendants,\r\n      ...highlightedParents,\r\n      ...selectedParents\r\n    );\r\n    const tree = without(currentTree, ...toExclude);\r\n    return { ...state, tree };\r\n  } else {\r\n    return {\r\n      ...state,\r\n      tree: intersection(\r\n        currentTree,\r\n        union(highlightedParents, selectedParents)\r\n      ),\r\n    };\r\n  }\r\n};\r\n\r\nexport const shortcutCollapse = (state: IState, [, id]: IEvent): IState => {\r\n  const newTreeNodes = updateTreeNodes(state, (node) => {\r\n    const isFound = node.id === state.selectedNode;\r\n    if (!isFound) return node;\r\n    const isCollapsed = !node.isCollapsed;\r\n    return {\r\n      ...node,\r\n      isCollapsed,\r\n    };\r\n  });\r\n  return {\r\n    ...state,\r\n    treeNodes: newTreeNodes,\r\n  };\r\n};\r\n\r\nexport const changeItemTitle = (\r\n  state: IState,\r\n  [, id, value]: IEvent\r\n): IState => {\r\n  const newTreeNodes = updateTreeNodes(state, (node) => {\r\n    const isFound = id === node.id;\r\n    if (!isFound) return node;\r\n    return {\r\n      ...node,\r\n      title: value,\r\n    };\r\n  });\r\n  return {\r\n    ...state,\r\n    treeNodes: newTreeNodes,\r\n  };\r\n};\r\n\r\nexport const shortcutToggleEditItem = (\r\n  state: IState,\r\n  event: IEvent\r\n): IState => {\r\n  const newTreeNodes = updateTreeNodes(state, (node) => {\r\n    const isFound = node.id === state.selectedNode;\r\n    if (!isFound) return { ...node, isEditable: false };\r\n    const isEditable = !node.isEditable;\r\n    return {\r\n      ...node,\r\n      isEditable,\r\n    };\r\n  });\r\n  return {\r\n    ...state,\r\n    treeNodes: newTreeNodes,\r\n  };\r\n};\r\n\r\nexport const shortcutEnter = (state: IState, event: IEvent): IState => {\r\n  const newTreeNodes = updateTreeNodes(state, (node) => {\r\n    const isFound = node.id === state.selectedNode;\r\n    if (!isFound) return node;\r\n    const isEditable = false;\r\n    return {\r\n      ...node,\r\n      isEditable,\r\n    };\r\n  });\r\n  return {\r\n    ...state,\r\n    treeNodes: newTreeNodes,\r\n  };\r\n};\r\n\r\nexport const shortcutDown = (state: IState, event: IEvent): IState => {\r\n  const nodes = state.tree;\r\n  const maxIndex = nodes.length;\r\n  const index = state.tree.indexOf(state.selectedNode);\r\n  const newIndex = (index + 1) % maxIndex;\r\n  return { ...state, selectedNode: nodes[newIndex] };\r\n};\r\n\r\nexport const shortcutMoveDown = (state: IState, event: IEvent): IState => {\r\n  const node = state.treeNodes[state.selectedNode];\r\n  if (!node) return state;\r\n  const parent = state.treeNodes[node.parent];\r\n  if (!parent) return state;\r\n  const children = parent.children;\r\n  const maxIndex = children.length - 1;\r\n  const index = parent.children.indexOf(node.id);\r\n  if (index === maxIndex) return state;\r\n  const newChildren = [\r\n    ...children.slice(0, index),\r\n    children[index + 1],\r\n    children[index],\r\n    ...children.slice(index + 2),\r\n  ];\r\n  const treeNodes = updateTreeNodes(state, (node) => {\r\n    if (node.id !== parent.id) return node;\r\n    return {\r\n      ...node,\r\n      children: newChildren,\r\n    };\r\n  });\r\n  return { ...state, treeNodes };\r\n};\r\n\r\nexport const shortcutUp = (state: IState, event: IEvent): IState => {\r\n  const nodes = state.tree;\r\n  const maxIndex = nodes.length;\r\n  const index = state.tree.indexOf(state.selectedNode);\r\n  const newIndex = (maxIndex + (index - 1)) % maxIndex;\r\n  return { ...state, selectedNode: nodes[newIndex] };\r\n};\r\n\r\nexport const shortcutMoveUp = (state: IState, event: IEvent): IState => {\r\n  const node = state.treeNodes[state.selectedNode];\r\n  if (!node) return state;\r\n  const parent = state.treeNodes[node.parent];\r\n  if (!parent) return state;\r\n  const children = parent.children;\r\n  const index = parent.children.indexOf(node.id);\r\n  if (index === 0) return state;\r\n  const newChildren = [\r\n    ...children.slice(0, index - 1),\r\n    children[index],\r\n    children[index - 1],\r\n    ...children.slice(index + 1),\r\n  ];\r\n  const treeNodes = updateTreeNodes(state, (node) => {\r\n    if (node.id !== parent.id) return node;\r\n    return {\r\n      ...node,\r\n      children: newChildren,\r\n    };\r\n  });\r\n  return { ...state, treeNodes };\r\n};\r\n\r\nexport const shortcutUndo = (state: IState, event: IEvent): IState => {\r\n  if (!UndoStack.length) return state;\r\n  RedoStack.push(state.treeNodes);\r\n  const prev = UndoStack.pop()!;\r\n  return { ...state, treeNodes: prev };\r\n};\r\n\r\nexport const shortcutRedo = (state: IState, event: IEvent): IState => {\r\n  if (!RedoStack.length) return state;\r\n  UndoStack.push(state.treeNodes);\r\n  const prev = RedoStack.pop()!;\r\n  return { ...state, treeNodes: prev };\r\n};\r\n","import { intersection, uniq, without } from \"lodash\";\r\nimport { Id, INote, IState } from \"../bridge\";\r\nimport { IEvent } from \"../utils/EventWrapper\";\r\nimport { randomNumber, scoreFunction } from \"../utils/memory\";\r\nimport { Utils } from \"../utils/utils\";\r\nimport { getDescendants, updateTreeNodes } from \"./tree.service\";\r\n\r\nexport const shortcutAddNote = (state: IState, event: IEvent): IState => {\r\n  const noteId = `${Id.Note}-${Utils.generateId()}`;\r\n  const newNoteNode: INote = {\r\n    description: \"Description...\",\r\n    title: \"Title\",\r\n    id: noteId,\r\n    isCollapsed: true,\r\n    isEditable: false,\r\n    isHighlighted: false,\r\n    parents: [state.selectedNode],\r\n  };\r\n  const newTreeNodes = updateTreeNodes(state, (node) => {\r\n    if (node.id === state.selectedNode) {\r\n      return {\r\n        ...node,\r\n        notes: [...node.notes, noteId],\r\n      };\r\n    }\r\n    return node;\r\n  });\r\n  return {\r\n    ...state,\r\n    treeNodes: newTreeNodes,\r\n    selectedNote: newNoteNode.id,\r\n    noteNodes: {\r\n      [newNoteNode.id]: newNoteNode,\r\n      ...state.noteNodes,\r\n    },\r\n  };\r\n};\r\n\r\nexport const shortcutDownNote = (state: IState, event: IEvent): IState => {\r\n  const notes = state.notes;\r\n  const maxIndex = notes.length;\r\n  const index = state.notes.indexOf(state.selectedNote);\r\n  const newIndex = (index + 1) % maxIndex;\r\n  return { ...state, selectedNote: notes[newIndex] };\r\n};\r\n\r\nexport const shortcutUpNote = (state: IState, event: IEvent): IState => {\r\n  const notes = state.notes;\r\n  const maxIndex = notes.length;\r\n  const index = state.notes.indexOf(state.selectedNote);\r\n  const newIndex = (maxIndex + index - 1) % maxIndex;\r\n  return { ...state, selectedNote: notes[newIndex] };\r\n};\r\n\r\nexport const shortcutCollapseNote = (state: IState, event: IEvent): IState => {\r\n  const note = state.noteNodes[state.selectedNote];\r\n  const newNoteNodes: IState[\"noteNodes\"] = {\r\n    ...state.noteNodes,\r\n    [state.selectedNote]: {\r\n      ...note,\r\n      isCollapsed: !note.isCollapsed,\r\n    },\r\n  };\r\n  return { ...state, noteNodes: newNoteNodes };\r\n};\r\n\r\nexport const shortcutRemoveNote = (state: IState): IState => {\r\n  const selectedNote = state.noteNodes[state.selectedNote];\r\n  const newNoteNodes: IState[\"noteNodes\"] = {\r\n    ...state.noteNodes,\r\n    [state.selectedNote]: {\r\n      ...selectedNote,\r\n      parents: [],\r\n    },\r\n  };\r\n  const newTreeNodes = updateTreeNodes(state, (node) => {\r\n    if (selectedNote.parents.includes(node.id)) {\r\n      return {\r\n        ...node,\r\n        notes: node.notes.filter((id) => id !== state.selectedNote),\r\n      };\r\n    }\r\n    return node;\r\n  });\r\n  const newNotes = without(state.notes, state.selectedNote);\r\n\r\n  return {\r\n    ...state,\r\n    selectedNote: newNotes[0],\r\n    notes: newNotes,\r\n    noteNodes: newNoteNodes,\r\n    treeNodes: newTreeNodes,\r\n  };\r\n};\r\n\r\nexport const editNote = (state: IState): IState => {\r\n  const selectedNote = state.noteNodes[state.selectedNote];\r\n  const newNoteNodes: IState[\"noteNodes\"] = {\r\n    ...updateNoteNodes(state, (note) => ({ ...note, isEditable: false })),\r\n    [state.selectedNote]: {\r\n      ...selectedNote,\r\n      isEditable: !selectedNote.isEditable,\r\n    },\r\n  };\r\n  return { ...state, noteNodes: newNoteNodes };\r\n};\r\n\r\nexport const incrementScore = (state: IState): IState => {\r\n  const selectedNote = state.noteNodes[state.selectedNote];\r\n  const newNoteNodes: IState[\"noteNodes\"] = {\r\n    ...updateNoteNodes(state, (note) => ({ ...note, isEditable: false })),\r\n    [state.selectedNote]: {\r\n      ...selectedNote,\r\n      score: Math.max((selectedNote.score || 0) + 1, 0),\r\n    },\r\n  };\r\n  return { ...state, noteNodes: newNoteNodes };\r\n};\r\n\r\nexport const decrementScore = (state: IState): IState => {\r\n  const selectedNote = state.noteNodes[state.selectedNote];\r\n  const newNoteNodes: IState[\"noteNodes\"] = {\r\n    ...updateNoteNodes(state, (note) => ({ ...note, isEditable: false })),\r\n    [state.selectedNote]: {\r\n      ...selectedNote,\r\n      score: Math.max((selectedNote.score || 0) - 1, 0),\r\n    },\r\n  };\r\n  return { ...state, noteNodes: newNoteNodes };\r\n};\r\n\r\nexport const updateNoteNodes = (state: IState, cb: (note: INote) => INote) => {\r\n  return Object.values(state.noteNodes)\r\n    .map(cb)\r\n    .reduce(\r\n      (acc, note) => ({ ...acc, [note.id]: note }),\r\n      {} as typeof state.noteNodes\r\n    );\r\n};\r\n\r\nexport const changeNoteTitle = (\r\n  state: IState,\r\n  [, id, value]: IEvent\r\n): IState => {\r\n  const newNoteNodes = updateNoteNodes(state, (note) => {\r\n    const isFound =\r\n      id.replace(Id.NoteTitle, \"\") === note.id.replace(Id.Note, \"\");\r\n    if (!isFound) return note;\r\n    return {\r\n      ...note,\r\n      title: value,\r\n    };\r\n  });\r\n  return {\r\n    ...state,\r\n    noteNodes: newNoteNodes,\r\n  };\r\n};\r\n\r\nexport const clickItemFromNote = (state: IState, [, id]: IEvent): IState => {\r\n  const notes = state.notes;\r\n  const index = state.notes.indexOf(state.selectedNote);\r\n  const noteId = notes[index];\r\n  const newNoteNodes = updateNoteNodes(state, (note) => {\r\n    const isFound =\r\n      noteId.replace(Id.Note, \"\") === note.id.replace(Id.Note, \"\");\r\n    if (!isFound) return note;\r\n    return {\r\n      ...note,\r\n      parents: note.parents.includes(id)\r\n        ? note.parents.filter((_id) => _id !== id)\r\n        : [...note.parents, id],\r\n    };\r\n  });\r\n  return { ...state, noteNodes: newNoteNodes };\r\n};\r\n\r\nexport const changeNoteDescription = (\r\n  state: IState,\r\n  [, id, value]: IEvent\r\n): IState => {\r\n  const newNoteNodes = updateNoteNodes(state, (note) => {\r\n    const isFound =\r\n      id.replace(Id.NoteDescription, \"\") === note.id.replace(Id.Note, \"\");\r\n    if (!isFound) return note;\r\n    return {\r\n      ...note,\r\n      description: value,\r\n    };\r\n  });\r\n  return {\r\n    ...state,\r\n    noteNodes: newNoteNodes,\r\n  };\r\n};\r\n\r\nexport const processNotes = (state: IState): IState => {\r\n  const descendants = [\r\n    state.selectedNode,\r\n    ...getDescendants(state.selectedNode, state),\r\n  ];\r\n  const newNotes: string[] = Object.values(state.noteNodes).reduce(\r\n    (acc, note) => {\r\n      const intersectionResult = intersection(descendants, note.parents);\r\n      const isMatch =\r\n        state.noteSearchInput.length >= 3 &&\r\n        note.title.toLowerCase().includes(state.noteSearchInput.toLowerCase());\r\n      randomNumber[note.id] = randomNumber[note.id] || Math.random();\r\n      const isMemoryDue =\r\n        randomNumber[note.id] <= scoreFunction(note.score || 0);\r\n      const notFiltered =\r\n        state.noteSearchInput.length < 3 && intersectionResult.length > 0;\r\n      const isSelected = note.id === state.selectedNote;\r\n      return (\r\n        state.isMemory\r\n          ? isMemoryDue && notFiltered\r\n          : isSelected || isMatch || notFiltered\r\n      )\r\n        ? [...acc, note.id]\r\n        : acc;\r\n    },\r\n    [] as string[]\r\n  );\r\n  return {\r\n    ...state,\r\n    notes: newNotes,\r\n  };\r\n};\r\n\r\nexport const changeNotesSearchInput = (\r\n  state: IState,\r\n  [, , value]: IEvent\r\n): IState => {\r\n  return {\r\n    ...state,\r\n    noteSearchInput: value,\r\n  };\r\n};\r\n","import { without } from \"lodash\";\r\nimport {\r\n  ERoute,\r\n  IAct,\r\n  IAppState,\r\n  Id,\r\n  IEntity,\r\n  initialLoadingState,\r\n  initialState,\r\n  IState,\r\n  Scope,\r\n} from \"../bridge\";\r\nimport { IEvent } from \"../utils/EventWrapper\";\r\nimport { compose } from \"../utils/utils\";\r\nimport {\r\n  changeCollectionSearchInput,\r\n  changeCollectionTitle,\r\n  processCollection as processCollection,\r\n  shortcutAddCollection,\r\n  shortcutDownCollection,\r\n  shortcutEditCollection,\r\n  shortcutEnterCollection,\r\n  shortcutUpCollection,\r\n} from \"./collection.service\";\r\nimport {\r\n  changeNoteDescription,\r\n  changeNotesSearchInput,\r\n  changeNoteTitle,\r\n  clickItemFromNote,\r\n  decrementScore,\r\n  editNote,\r\n  incrementScore,\r\n  processNotes,\r\n  shortcutAddNote,\r\n  shortcutCollapseNote,\r\n  shortcutDownNote,\r\n  shortcutRemoveNote,\r\n  shortcutUpNote,\r\n} from \"./note.service\";\r\nimport { Shortcut } from \"./shortcuts.service\";\r\nimport {\r\n  changeItemTitle,\r\n  changeSearchInput,\r\n  clickItem,\r\n  process as processTree,\r\n  shortcutAddItem,\r\n  shortcutCollapse,\r\n  shortcutDown,\r\n  shortcutEnter,\r\n  shortcutMoveDown,\r\n  shortcutMoveUp,\r\n  shortcutRedo,\r\n  shortcutRemoveItem,\r\n  shortcutToggleEditItem,\r\n  shortcutUndo,\r\n  shortcutUp,\r\n  toggleIsMemory,\r\n  updateHighligted,\r\n} from \"./tree.service\";\r\n\r\nexport const UndoStack: IState[\"treeNodes\"][] = [];\r\nexport const RedoStack: IState[\"treeNodes\"][] = [];\r\n\r\nconst toggleScope = (state: IState, event: IEvent): IState => ({\r\n  ...state,\r\n  scope: without(Scope, state.scope)[0],\r\n});\r\n\r\nexport const actTree: IAct<IState> = (_state) => ([type, id, value]) => {\r\n  // console.warn(type, id, value)\r\n  // Shortcuts\r\n  const toggleScopeResult =\r\n    type === \"keydown\" &&\r\n    id === Id.Keyboard &&\r\n    value === Shortcut.ToggleScope &&\r\n    toggleScope(_state, [type, id, value]);\r\n\r\n  const toggleIsMemoryResult =\r\n    type === \"keydown\" &&\r\n    id === Id.Keyboard &&\r\n    value === Shortcut.ToggleMemory &&\r\n    toggleIsMemory(_state);\r\n\r\n  const state = toggleScopeResult || toggleIsMemoryResult || _state;\r\n\r\n  if (state.scope === \"tree\") {\r\n    // IO\r\n    const changeItemTitleResult =\r\n      type === \"change\" &&\r\n      id.includes(Id.Item) &&\r\n      changeItemTitle(state, [type, id, value]);\r\n    const clickItemResult =\r\n      type === \"click\" &&\r\n      id.includes(Id.Item) &&\r\n      clickItem(state, [type, id, value]);\r\n    const changeSearchInputResult =\r\n      type === \"change\" &&\r\n      id === Id.SearchItemsInput &&\r\n      changeSearchInput(state, [type, id, value]);\r\n\r\n    const undoableTreeResult =\r\n      // Shortcuts\r\n      compose([\r\n        [Shortcut.Add, shortcutAddItem],\r\n        [Shortcut.Remove, shortcutRemoveItem],\r\n        [Shortcut.MoveDown, shortcutMoveDown],\r\n        [Shortcut.MoveUp, shortcutMoveUp],\r\n      ])(state, [type, id, value]) ||\r\n      clickItemResult ||\r\n      changeItemTitleResult;\r\n\r\n    if (undoableTreeResult) {\r\n      RedoStack.length = 0;\r\n      UndoStack.push(state.treeNodes);\r\n    }\r\n\r\n    const nonUndoableTreeResult =\r\n      compose([\r\n        [Shortcut.Undo, shortcutUndo],\r\n        [Shortcut.Redo, shortcutRedo],\r\n        [Shortcut.Up, shortcutUp],\r\n        [Shortcut.Down, shortcutDown],\r\n        [Shortcut.Collapse, shortcutCollapse],\r\n        [Shortcut.Enter, shortcutEnter],\r\n        [Shortcut.Edit, shortcutToggleEditItem],\r\n      ])(state, [type, id, value]) ||\r\n      // IO\r\n      changeSearchInputResult ||\r\n      state;\r\n\r\n    const treeResult = undoableTreeResult || nonUndoableTreeResult;\r\n\r\n    return processNotes(\r\n      processTree({\r\n        ...treeResult,\r\n        treeNodes: updateHighligted(treeResult),\r\n      })\r\n    );\r\n  } else {\r\n    // IO\r\n    const changeNotesSearchInputResult =\r\n      type === \"change\" &&\r\n      id === Id.SearchNotesInput &&\r\n      changeNotesSearchInput(state, [type, id, value]);\r\n\r\n    const changeNoteTitleResult =\r\n      type === \"change\" &&\r\n      id.includes(Id.NoteTitle) &&\r\n      changeNoteTitle(state, [type, id, value]);\r\n\r\n    const changeNoteDescriptionResult =\r\n      type === \"change\" &&\r\n      id.includes(Id.NoteDescription) &&\r\n      changeNoteDescription(state, [type, id, value]);\r\n\r\n    const clickItemResult =\r\n      type === \"click\" &&\r\n      id.includes(Id.Item) &&\r\n      clickItemFromNote(state, [type, id, value]);\r\n\r\n    return processNotes(\r\n      changeNoteTitleResult ||\r\n        changeNoteDescriptionResult ||\r\n        clickItemResult ||\r\n        compose([\r\n          [Shortcut.Add, shortcutAddNote],\r\n          [Shortcut.Up, shortcutUpNote],\r\n          [Shortcut.Down, shortcutDownNote],\r\n          [Shortcut.Collapse, shortcutCollapseNote],\r\n          [Shortcut.Remove, shortcutRemoveNote],\r\n          [Shortcut.Edit, editNote],\r\n          [Shortcut.IncrementScore, incrementScore],\r\n          [Shortcut.DecrementScore, decrementScore],\r\n        ])(state, [type, id, value]) ||\r\n        changeNotesSearchInputResult ||\r\n        state\r\n    );\r\n  }\r\n};\r\n\r\nexport const actCollection: IAct<IAppState[\"collection\"]> = (state) => (\r\n  event\r\n) => {\r\n  const [type, id, value] = event;\r\n\r\n  const changeCollectionTitleResult =\r\n    type === \"change\" &&\r\n    id.includes(Id.Collection) &&\r\n    changeCollectionTitle(state, [type, id, value]);\r\n\r\n  const changeSearchInputResult =\r\n    type === \"change\" &&\r\n    id === Id.SearchCollectionsInput &&\r\n    changeCollectionSearchInput(state, [type, id, value]);\r\n\r\n  const collection =\r\n    (compose([\r\n      [Shortcut.Add, shortcutAddCollection],\r\n      [Shortcut.Down, shortcutDownCollection],\r\n      [Shortcut.Up, shortcutUpCollection],\r\n      [Shortcut.Edit, shortcutEditCollection],\r\n      [Shortcut.Enter, shortcutEditCollection],\r\n      [Shortcut.Enter, shortcutEnterCollection],\r\n    ])(state, event) as IAppState[\"collection\"]) ||\r\n    changeCollectionTitleResult ||\r\n    changeSearchInputResult ||\r\n    state;\r\n  return processCollection(collection);\r\n};\r\n\r\nexport const act: IAct<IAppState> = (state) => (event) => {\r\n  const [type, id, value] = event;\r\n  // IO\r\n  if (id === Id.State && state.route === ERoute.Collection) {\r\n    const loadedState = JSON.parse(value);\r\n    const collectionNodes = (Object.keys(loadedState) as string[])\r\n      .map((key) => {\r\n        const node: IEntity = {\r\n          id: key,\r\n          isEditable: false,\r\n          isHighlighted: false,\r\n          title: (loadedState[key] as IAppState[\"tree\"]).title,\r\n        };\r\n        return node;\r\n      })\r\n      .reduce(\r\n        (acc, node) => ({\r\n          ...acc,\r\n          [node.id]: node,\r\n        }),\r\n        {} as IAppState[\"collection\"][\"collectionNodes\"]\r\n      );\r\n    return {\r\n      ...initialLoadingState,\r\n      isLoading: false,\r\n      collection: {\r\n        ...initialLoadingState.collection,\r\n        collectionNodes,\r\n        collections: Object.keys(collectionNodes),\r\n      },\r\n    };\r\n  } else if (\r\n    id === Id.State &&\r\n    state.route === ERoute.Tree &&\r\n    state.collection.selectedCollection\r\n  ) {\r\n    const tree = JSON.parse(value)[state.collection.selectedCollection];\r\n    return {\r\n      ...initialState,\r\n      isLoading: false,\r\n      tree: tree || initialState.tree,\r\n      collection: {\r\n        ...state.collection,\r\n      },\r\n    };\r\n  } else if (id === Id.Route && value) {\r\n    return { ...state, route: value as ERoute };\r\n  }\r\n  const tree =\r\n    state.route === ERoute.Tree ? actTree(state.tree)(event) : state.tree;\r\n  const collection =\r\n    state.route === ERoute.Collection\r\n      ? actCollection(state.collection)(event)\r\n      : state.collection;\r\n  const route = !!collection.selectedCollection\r\n    ? ERoute.Tree\r\n    : ERoute.Collection;\r\n  const hasRouteChanged = route !== state.route;\r\n  const title =\r\n    (collection.selectedCollection &&\r\n      collection.collectionNodes[collection.selectedCollection as string]\r\n        ?.title) ||\r\n    \"Tree\";\r\n  const newState = {\r\n    ...state,\r\n    route,\r\n    tree: { ...tree, title },\r\n    collection,\r\n    isLoading: hasRouteChanged,\r\n  };\r\n  console.warn(newState);\r\n  return newState;\r\n};\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\nimport { IAppState, Id, StateSubject } from \"../bridge\";\r\nimport { EventSubject } from \"../utils/EventWrapper\";\r\nimport { Shortcut } from \"./shortcuts.service\";\r\n\r\n// TODO: Think of how to test this file\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyA3kMxazy633uQ4BKTvWYF8hFZEl0PP_as\",\r\n  authDomain: \"tree-of-abstraction.firebaseapp.com\",\r\n  databaseURL: \"https://tree-of-abstraction.firebaseio.com\",\r\n  projectId: \"tree-of-abstraction\",\r\n  storageBucket: \"tree-of-abstraction.appspot.com\",\r\n  messagingSenderId: \"161683871914\",\r\n  appId: \"1:161683871914:web:7cd83dc09d276698c8d8d3\",\r\n  measurementId: \"G-SPG691QK9Z\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst writeCollection = (\r\n  collectionId: string,\r\n  tree: IAppState[\"tree\"],\r\n  cb: () => void\r\n) => {\r\n  firebase\r\n    .database()\r\n    .ref(\"collection/\" + collectionId)\r\n    .set({\r\n      ...tree,\r\n    })\r\n    .then(cb)\r\n    .catch(cb);\r\n};\r\n\r\nconst dbRef = firebase.database().ref();\r\n\r\nconst getCollections = () =>\r\n  dbRef\r\n    .child(\"collection\")\r\n    .get()\r\n    .then((snapshot) => {\r\n      if (snapshot.exists()) {\r\n        console.log(snapshot.val());\r\n        return snapshot.val();\r\n      } else {\r\n        console.log(\"No data available\");\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.error(error);\r\n    });\r\n\r\nconst normalizeState = (state: { [id: string]: IAppState[\"tree\"] }) =>\r\n  Object.entries(state)\r\n    .map(\r\n      ([id, tree]) =>\r\n        [\r\n          id,\r\n          {\r\n            ...tree,\r\n            noteNodes: tree.noteNodes || {},\r\n            notes: tree.notes || [],\r\n            tree: tree.tree || [],\r\n            treeNodes:\r\n              (tree.treeNodes &&\r\n                Object.values(tree.treeNodes)\r\n                  .map((node) => ({\r\n                    ...node,\r\n                    children: node.children || [],\r\n                    notes: node.notes || [],\r\n                  }))\r\n                  .reduce((acc, node) => ({ ...acc, [node.id]: node }), {})) ||\r\n              {},\r\n          } as IAppState[\"tree\"],\r\n        ] as [string, IAppState[\"tree\"]]\r\n    )\r\n    .reduce((acc, [id, tree]) => ({ ...acc, [id]: tree }), {});\r\n\r\nwindow.addEventListener(\"load\", () => {\r\n  EventSubject.subscribe((event) => {\r\n    const [type, id, value] = event;\r\n    // On Save Keydown\r\n    if (type === \"keydown\" && value === Shortcut.Save) {\r\n      EventSubject.next([\"io\", Id.Save, \"true\"]);\r\n    }\r\n    // On Save IO\r\n    else if (type === \"io\" && id === Id.Save && value === \"true\") {\r\n      const {\r\n        collection: { selectedCollection },\r\n        tree,\r\n      } = StateSubject.getValue();\r\n      // Write Collection\r\n      if (selectedCollection) {\r\n        writeCollection(selectedCollection, tree, () => {\r\n          EventSubject.next([\"io\", Id.Save, \"false\"]);\r\n        });\r\n        // Reset Loading State\r\n      } else {\r\n        EventSubject.next([\"io\", Id.Save, \"false\"]);\r\n      }\r\n      // On Load IO\r\n    }\r\n  });\r\n});\r\n\r\nconst cookies = document.cookie.split(\"; \").map((s) => s.split(\"=\"));\r\nconst email = cookies.find(([key]) => key === \"email\")?.[1] || \"\";\r\nconst password = cookies.find(([key]) => key === \"password\")?.[1] || \"\";\r\n\r\nfirebase\r\n  .auth()\r\n  .signInWithEmailAndPassword(email, password)\r\n  .then((userCredential) => {\r\n    getCollections().then((state) => {\r\n      console.info(state);\r\n      if (!state) return;\r\n      EventSubject.next([\r\n        \"io\",\r\n        Id.State,\r\n        JSON.stringify(normalizeState(state)),\r\n      ]);\r\n    });\r\n\r\n    // Signed in\r\n    document.addEventListener(\"route\", () => {\r\n      getCollections().then((state) => {\r\n        console.info(state);\r\n        if (!state) return;\r\n        EventSubject.next([\r\n          \"io\",\r\n          Id.State,\r\n          JSON.stringify(normalizeState(state)),\r\n        ]);\r\n      });\r\n    });\r\n  })\r\n  .catch((error) => {\r\n    var errorCode = error.code;\r\n    var errorMessage = error.message;\r\n    console.error(errorCode, errorMessage);\r\n  });\r\n","import { BehaviorSubject } from \"rxjs\";\r\nimport { act } from \"./services/main.service\";\r\nimport { EventSubject, IEvent } from \"./utils/EventWrapper\";\r\nimport \"./services/shortcuts.service\";\r\nimport \"./services/persistence.io\";\r\nimport \"./services/export\";\r\nimport { genericSequence } from \"./utils/utils\";\r\n\r\nexport type InputType = \"change\" | \"click\" | \"focus\";\r\n\r\nexport enum Id {\r\n  // Items\r\n  AddItemInput = \"add-item-input\",\r\n  Item = \"item-element\",\r\n  SearchItemsInput = \"search-items-input\",\r\n  // Notes\r\n  Note = \"note-element\",\r\n  NoteTitle = \"note-title\",\r\n  NoteDescription = \"note-description\",\r\n  SearchNotesInput = \"search-notes-input\",\r\n  Keyboard = \"keyboard\",\r\n  // Collection\r\n  Collection = \"collection-element\",\r\n  SearchCollectionsInput = \"search-collections-input\",\r\n  // IO\r\n  Save = \"save-io\",\r\n  Load = \"load-io\",\r\n  State = \"collections-io\",\r\n  Tree = \"tree-io\",\r\n  Route = \"route-io\",\r\n}\r\n\r\nexport type IAct<T> = (state: T) => (event: IEvent) => T;\r\n\r\nexport const Scope = [\"tree\", \"notes\"] as const;\r\n\r\nexport const RootId = `${Id.Item}-root`;\r\n\r\nexport type IInput = [InputType, string, string];\r\n\r\nexport interface IEntity {\r\n  id: string;\r\n  title: string;\r\n  isEditable: boolean;\r\n  isHighlighted: boolean;\r\n}\r\n\r\nexport interface INode extends IEntity {\r\n  isCollapsed: boolean;\r\n  children: string[];\r\n  notes: string[];\r\n  parent: string;\r\n  indent: number;\r\n}\r\n\r\nexport interface INote extends IEntity {\r\n  description: string;\r\n  isCollapsed: boolean;\r\n  parents: string[];\r\n  score?: number;\r\n}\r\n\r\nexport type ITree = string[];\r\n\r\nexport enum ERoute {\r\n  Collection = \"Collection\",\r\n  Tree = \"Tree\",\r\n}\r\n\r\nexport type IAppState = {\r\n  isLoading: boolean;\r\n\r\n  // Routing\r\n  route: ERoute;\r\n\r\n  collection: {\r\n    // Collection\r\n    collectionNodes: { [id: string]: IEntity };\r\n    selectedCollection?: string;\r\n    collectionSearchInput: string;\r\n    collections: string[];\r\n  };\r\n\r\n  tree: {\r\n    title: string;\r\n\r\n    // Tree\r\n    scope: typeof Scope[number];\r\n    treeNodes: { [id: string]: INode };\r\n    tree: ITree;\r\n    selectedNode: string;\r\n    itemSearchInput: string;\r\n\r\n    // Notes\r\n    isMemory: boolean;\r\n    noteNodes: { [id: string]: INote };\r\n    notes: string[];\r\n    selectedNote: string;\r\n    noteSearchInput: string;\r\n  };\r\n};\r\n\r\nexport type IState = IAppState[\"tree\"];\r\n\r\nconst RootNode = {\r\n  id: RootId,\r\n  children: [],\r\n  notes: [],\r\n  isCollapsed: false,\r\n  isHighlighted: false,\r\n  isEditable: false,\r\n  parent: \"\",\r\n  title: \"ROOT\",\r\n  indent: 0,\r\n};\r\n\r\nexport const initialState: IAppState = {\r\n  isLoading: false,\r\n\r\n  // Routing\r\n  route: ERoute.Tree,\r\n\r\n  collection: {\r\n    collectionNodes: {},\r\n    selectedCollection: \"test\",\r\n    collectionSearchInput: \"\",\r\n    collections: [],\r\n  },\r\n\r\n  tree: {\r\n    title: \"Tree\",\r\n\r\n    // Tree\r\n    scope: Scope[0],\r\n    treeNodes: {\r\n      [RootId]: RootNode,\r\n    },\r\n    tree: [RootId],\r\n    selectedNode: RootId,\r\n    itemSearchInput: \"\",\r\n\r\n    //Notes\r\n    isMemory: false,\r\n    noteNodes: {},\r\n    notes: [],\r\n    selectedNote: \"\",\r\n    noteSearchInput: \"\",\r\n  },\r\n};\r\n\r\nexport const initialCollectionState: IAppState = {\r\n  ...initialState,\r\n  route: ERoute.Collection,\r\n  collection: {\r\n    ...initialState.collection,\r\n    selectedCollection: undefined,\r\n  },\r\n};\r\n\r\nexport const initialLoadingState: IAppState = {\r\n  ...initialCollectionState,\r\n  isLoading: true,\r\n};\r\n\r\nexport const StateSubject = new BehaviorSubject<IAppState>(initialLoadingState);\r\n\r\nwindow.addEventListener(\"load\", () => {\r\n  EventSubject.subscribe((event) => {\r\n    const prevState = StateSubject.getValue();\r\n    const newState = act(prevState)(event);\r\n    console.info(event, newState);\r\n    StateSubject.next(newState);\r\n  });\r\n});\r\n\r\nexport const sequence = genericSequence(act, initialState);\r\n\r\nexport const getSequence = (initialState: IAppState) => (\r\n  inputs: IEvent[]\r\n): IAppState => inputs.reduce((acc, input) => act(acc)(input), initialState);\r\n","import React from \"react\";\r\nimport { IAppState, Id, IState } from \"../bridge\";\r\nimport { EventWrapper } from \"../utils/EventWrapper\";\r\n\r\nexport const CollectionContainer: React.FC<{ state: IAppState }> = (props) => {\r\n  const state = props.state.collection;\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        height: \"100vh\",\r\n        overflow: \"hidden\",\r\n        background: \"black\",\r\n      }}\r\n      className=\"container\"\r\n    >\r\n      <div>\r\n        <EventWrapper id={Id.SearchCollectionsInput}>\r\n          <input\r\n            autoFocus\r\n            placeholder=\"Search\"\r\n            value={state.collectionSearchInput}\r\n          />\r\n        </EventWrapper>\r\n      </div>\r\n      <ul>\r\n        {state.collections.map((id) => {\r\n          const entity = state.collectionNodes[id];\r\n          return (\r\n            <li\r\n              key={id}\r\n              style={{\r\n                marginLeft: \"32px\",\r\n                backgroundColor: (entity.isHighlighted && \"grey\") || \"unset\",\r\n              }}\r\n            >\r\n              <EventWrapper\r\n                key={id}\r\n                id={`${Id.Collection}-${id.replace(`${Id.Collection}-`, \"\")}`}\r\n              >\r\n                {!entity.isEditable && <span>{entity.title}</span>}\r\n                {entity.isEditable && <input autoFocus value={entity.title} />}\r\n              </EventWrapper>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Loader: React.FC<{}> = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        position: \"fixed\",\r\n        background: \"rgba(0, 0, 0, 0.5)\",\r\n        color: \"white\",\r\n      }}\r\n    >\r\n      <p>Loading...</p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { IAppState, Id, IState } from \"../bridge\";\r\nimport { EventWrapper } from \"../utils/EventWrapper\";\r\nimport sanitize from \"sanitize-html\";\r\n\r\nexport const TreeContainer: React.FC<{ state: IAppState }> = (props) => {\r\n  const state = props.state.tree;\r\n  useEffect(() => {\r\n    const selectedNode =\r\n      state.selectedNode && document.querySelector(`#${state.selectedNode}`);\r\n    const selectedNote =\r\n      state.selectedNote && document.querySelector(`#${state.selectedNote}`);\r\n    selectedNode && selectedNode.scrollIntoView();\r\n    selectedNote && selectedNote.scrollIntoView();\r\n  }, [state.selectedNode, state.selectedNote]);\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        height: \"100vh\",\r\n        overflow: \"hidden\",\r\n        background: \"black\",\r\n        border: state.isMemory ? \"4px solid red\" : \"unset\",\r\n      }}\r\n      className=\"container\"\r\n    >\r\n      <div\r\n        style={{\r\n          opacity: state.scope === \"tree\" ? \"100%\" : \"50%\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          width: \"50%\",\r\n          borderRight: \"2px dashed black\",\r\n          height: \"100%\",\r\n          background: \"#333\",\r\n          overflow: \"scroll\",\r\n        }}\r\n      >\r\n        <div style={{ display: \"flex\", position: \"fixed\", top: 0 }}>\r\n          <EventWrapper id={Id.SearchItemsInput}>\r\n            <input\r\n              autoFocus\r\n              placeholder=\"Search\"\r\n              value={state.itemSearchInput}\r\n            />\r\n          </EventWrapper>\r\n        </div>\r\n        <br />\r\n        <ul>\r\n          {state.tree.map((id) => {\r\n            const node = state.treeNodes[id];\r\n            return (\r\n              <li\r\n                id={id}\r\n                key={id}\r\n                style={{\r\n                  marginLeft: node.indent * 32,\r\n                  backgroundColor:\r\n                    (node.isHighlighted && \"orange\") ||\r\n                    (node.id === state.selectedNode && \"black\") ||\r\n                    \"unset\",\r\n                }}\r\n              >\r\n                <EventWrapper\r\n                  key={id}\r\n                  id={`${Id.Item}-${id.replace(`${Id.Item}-`, \"\")}`}\r\n                >\r\n                  {!node.isEditable && <span>{node.title}</span>}\r\n                  {node.isEditable && <input autoFocus value={node.title} />}\r\n                </EventWrapper>{\" \"}\r\n                <span>{node.isCollapsed ? \"(...)\" : \"\"}</span>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          opacity: state.scope === \"notes\" ? \"100%\" : \"50%\",\r\n          flexDirection: \"column\",\r\n          width: \"50%\",\r\n          borderRight: \"2px dashed black\",\r\n          background: \"#333\",\r\n          height: \"100%\",\r\n          overflow: \"scroll\",\r\n        }}\r\n      >\r\n        <div style={{ display: \"flex\", position: \"fixed\", top: 0 }}>\r\n          <EventWrapper id={Id.SearchNotesInput}>\r\n            <input\r\n              autoFocus\r\n              placeholder=\"Search\"\r\n              value={state.noteSearchInput}\r\n            />\r\n          </EventWrapper>\r\n        </div>\r\n        <br />\r\n        <ul>\r\n          {state.notes?.map((id) => {\r\n            const note = state.noteNodes?.[id];\r\n            if (!note) return null;\r\n            return (\r\n              <li\r\n                id={id}\r\n                key={id}\r\n                style={{\r\n                  padding: \"8px\",\r\n                  background: id === state.selectedNote ? \"black\" : \"unset\",\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    width: \"100%\",\r\n                  }}\r\n                >\r\n                  <EventWrapper\r\n                    key={id}\r\n                    id={`${Id.Note}-${id.replace(`${Id.Note}-`, \"\")}`}\r\n                  >\r\n                    {!note.isEditable && <p>{note.title}</p>}\r\n                    {note.parents.map((id) => (\r\n                      <i key={id}>{state.treeNodes[id].title}</i>\r\n                    ))}\r\n                    {!note.isEditable && !note.isCollapsed && (\r\n                      <p\r\n                        dangerouslySetInnerHTML={{\r\n                          __html: sanitize(note.description),\r\n                        }}\r\n                      ></p>\r\n                    )}\r\n                  </EventWrapper>\r\n                  {note.isEditable && (\r\n                    <EventWrapper\r\n                      id={`${Id.NoteTitle}-${id.replace(`${Id.Note}-`, \"\")}`}\r\n                    >\r\n                      <input value={note.title} />\r\n                    </EventWrapper>\r\n                  )}\r\n                  {note.isEditable && (\r\n                    <EventWrapper\r\n                      id={`${Id.NoteDescription}-${id.replace(\r\n                        `${Id.Note}-`,\r\n                        \"\"\r\n                      )}`}\r\n                    >\r\n                      <textarea rows={4} cols={50} value={note.description} />\r\n                    </EventWrapper>\r\n                  )}\r\n                </div>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  useHistory,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport { ERoute, Id, StateSubject } from \"./bridge\";\r\nimport { CollectionContainer } from \"./components/CollectionContainer\";\r\nimport { Loader } from \"./components/Loader\";\r\nimport { TreeContainer } from \"./components/TreeContainer\";\r\nimport { EventSubject } from \"./utils/EventWrapper\";\r\nimport { useSharedState } from \"./utils/utils\";\r\n\r\nconst RouteHelper: React.FC<{}> = () => {\r\n  const [state] = useSharedState(StateSubject);\r\n  const history = useHistory();\r\n  const pathname = history.location.pathname;\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  React.useEffect(() => {\r\n    if (pathname) {\r\n      const route = pathname === \"/\" ? ERoute.Collection : ERoute.Tree;\r\n      document.dispatchEvent(new CustomEvent(\"route\"));\r\n      EventSubject.next([\"io\", Id.Load, \"true\"]);\r\n      EventSubject.next([\"io\", Id.Route, route]);\r\n    }\r\n  }, [pathname]);\r\n\r\n  React.useEffect(() => {\r\n    history.push(\r\n      state.route === ERoute.Collection || !state.collection.selectedCollection\r\n        ? \"./\"\r\n        : `./tree/${state.collection.selectedCollection}`\r\n    );\r\n  }, [state.route]);\r\n\r\n  return null;\r\n};\r\n\r\nexport default function App() {\r\n  const [state] = useSharedState(StateSubject);\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        {state.isLoading && <Loader />}\r\n        <RouteHelper />\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <CollectionContainer state={state} />\r\n          </Route>\r\n          <Route path=\"/tree/:id\">\r\n            <TreeContainer state={state} />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport \"./index.css\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nrender(<App />, rootElement);\r\n"],"sourceRoot":""}